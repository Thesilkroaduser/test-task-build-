{"version":3,"sources":["components/controls/controls.jsx","components/notification/notification.jsx","components/output/output.jsx","App.js","reportWebVitals.js","redux/rootReducer.js","index.js"],"names":["Controls","dispatch","useDispatch","inputElement","useRef","filter","getDataFromServer","a","fetch","proxyURL","response","json","className","ref","type","htmlFor","id","onChange","onClick","e","preventDefault","parseFloat","current","value","isNaN","setTimeout","then","data","wordsArray","getDataByLength","Notification","useSelector","state","error","shallowEqual","Output","listItems","map","item","index","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","caseSensitive","store","createStore","action","filteredByLength","length","filteredBySubstring","includes","toLowerCase","flag","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e34f3fa3.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport './controls.scss';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction Controls() {\r\n\r\n  const dispatch = useDispatch();\r\n  const inputElement = useRef();\r\n  let filter = '';\r\n\r\n  const getDataFromServer = async () => {\r\n    const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\r\n    const mainURL = 'http://www.mrsoft.by/data.json';\r\n    const response = await fetch(proxyURL + mainURL);\r\n    return response.json();\r\n  };\r\n\r\n  const getDataByLength = () => {\r\n    filter = parseFloat(inputElement.current.value);\r\n    inputElement.current.value = '';\r\n    if (!isNaN(filter)) {\r\n      getDataFromServer()\r\n      .then(data => dispatch({ type: 'GET-BY-LENGTH', wordsArray: data.data, filter: filter }))\r\n      .then(() => filter = '' );\r\n      \r\n    } else {\r\n      dispatch({ type: 'ERROR' });\r\n      setTimeout(() => { dispatch({ type: 'ERROR' })}, 600);\r\n      filter = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  const getDataBySubstring = () => {\r\n    filter = inputElement.current.value;\r\n    inputElement.current.value = '';\r\n    getDataFromServer()\r\n    .then(data => dispatch({ type: 'GET-BY-SUBSTR', wordsArray: data.data, filter: filter }))\r\n    .then(() => filter = '' );\r\n  }\r\n\r\n  const toggleCase = () => {\r\n    return {\r\n      type: 'TOGGLE'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"controls-wrapper\">\r\n      <form className=\"form\">\r\n        <h2 className=\"subtitle\">input</h2>\r\n        <div className=\"form-group\">\r\n          <input \r\n            ref={inputElement} \r\n            className=\"search\" \r\n            type=\"text\" />\r\n          <div className=\"formItem-wrapper\">\r\n            <label className=\"field-name\" htmlFor=\"textField\" >\r\n              Ð¡ase sensitive\r\n            </label>\r\n            <input \r\n              className=\"toggle-case\" \r\n              type=\"checkbox\" \r\n              id=\"textField\" \r\n              onChange={() => {dispatch(toggleCase())}} >\r\n            </input>\r\n          </div>\r\n          <button \r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              getDataByLength();\r\n            }} \r\n            className=\"submit-button\" \r\n            type=\"submit\" >\r\n            By word length\r\n          </button>\r\n          <button \r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              getDataBySubstring();\r\n            }}  \r\n            className=\"submit-button\" \r\n            type=\"submit\" >\r\n            By substring\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;","import React from 'react';\r\nimport './notification.scss';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n\r\nfunction Notification() {\r\n\r\n  const error = useSelector(state => state.error, shallowEqual);\r\n\r\n  if (error) {\r\n    return (\r\n      <p className=\"notification\">Incorrect request</p>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport './output.scss';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n\r\nfunction Output() {\r\n\r\n  const data = useSelector(state => state.data, shallowEqual);\r\n  const listItems = data.map((item, index) =>\r\n    <li className=\"list-item\" key={`${index}`}>{item}</li>\r\n  );\r\n\r\n  return (\r\n    <div className=\"output\">\r\n      <h2 className=\"subtitle\">Output</h2>\r\n      {/* <p>{data.length ? data : 'OUTPUT IS EMPTY'}</p> */}\r\n      <ul className=\"list\">{listItems}</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Output;","import './App.scss';\nimport Controls from '../src/components/controls/controls';\nimport Notification from '../src/components/notification/notification';\nimport Output from '../src/components/output/output';\n\nfunction App() {\n\n  return (\n    <main className=\"App\">\n      <Notification />\n      <Controls />\n      <Output />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  data: [],\r\n  caseSensitive: false,\r\n  error: false\r\n}\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'TOGGLE':\r\n      return { ...state, caseSensitive: !state.caseSensitive }\r\n    case 'GET-BY-LENGTH':\r\n      const filteredByLength = action.wordsArray.filter(item => item.length > action.filter );\r\n      return { ...state,  data: filteredByLength}\r\n    case 'GET-BY-SUBSTR':\r\n      let filteredBySubstring;\r\n      if (!state.caseSensitive) {\r\n        filteredBySubstring = action.wordsArray.filter((item) => \r\n          item.toLowerCase().includes(action.filter.toLowerCase())\r\n        );\r\n      } else {\r\n        filteredBySubstring = action.wordsArray.filter(item => item.includes(action.filter));\r\n      }\r\n      return { ...state,  data: filteredBySubstring}\r\n    case 'ERROR':\r\n      const flag = !state.error;\r\n      return { ...state,  error: flag }\r\n    default:\r\n      return state;\r\n  } \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode> \n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}